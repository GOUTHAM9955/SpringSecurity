package com.telusko.SecurityProject01;
// IN THIS PROJECT WE ARE GOING TO START LOOKING AT SPRING SECURITY

/*
 * Spring Security is more about securing API calls(Authentication && Authorization)
 *  	INFO: OWASP  will give top 10 web app security risks (https://owasp.org/www-project-top-ten/)
 *  
 *  >> For Spring Security we add spring security dependency
 *  >> If you add this dependency when we deploy the application spring itself will create an id and when we try to access the end point's it will ask us to sign in
 *  		The anticipated credentials are username : user password: id generated by springBoot and all the endpoints can be accessed by this credentials
 *  
 *  >> to add our own credentials we can add our own using application.properties 
 *  		spring.security.user.name=alien
			spring.security.user.password=telusko@123
			
	>> When ever you make a request to server a sessionId will get created as long as the session Id is valid we can access those resources
			we can also restrict how long that session Id can be valid
			
 *  
 *  >> When we add HttpServletRequest to the request parameter we can get it by getSession() ..... CHECK CONTROLLER CLASS
 *  		When you run it and check it will give the same session id for multiple end points after logging in
 *  
 *
 * >> To avoid the misuse we have two mechanisms
 * 		1) Same session restriction: Enabling same session id for the user if they are using from same browser
 * 			For this we have add below property in application.properties
 * 				:- server.servlet.session.cookie.same-site=strict
 * 			
 * 		2) CSRF or JWT Tokens 
 * 		
 */
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SecurityProject01Application {

	public static void main(String[] args) {
		SpringApplication.run(SecurityProject01Application.class, args);
	}

}
